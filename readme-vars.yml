---

# project information
project_name: webtop
project_url: "https://github.com/linuxserver/docker-webtop"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webtop-logo.png"
project_blurb: |
  [{{ project_name|capitalize }}]({{ project_url }}) - Alpine, Ubuntu, Fedora, and Arch based containers containing full desktop environments in officially supported flavors accessible via any modern web browser.
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"
project_categories: "Remote Desktop"
# supported architectures
available_architectures:
  - {arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - {arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
# development version
development_versions: true
development_versions_items:
  - {tag: "latest", desc: "XFCE Alpine"}
  - {tag: "ubuntu-xfce", desc: "XFCE Ubuntu"}
  - {tag: "fedora-xfce", desc: "XFCE Fedora"}
  - {tag: "arch-xfce", desc: "XFCE Arch"}
  - {tag: "debian-xfce", desc: "XFCE Debian"}
  - {tag: "ubuntu-kde", desc: "KDE Ubuntu"}
  - {tag: "fedora-kde", desc: "KDE Fedora"}
  - {tag: "arch-kde", desc: "KDE Arch"}
  - {tag: "debian-kde", desc: "KDE Debian"}
  - {tag: "alpine-mate", desc: "MATE Alpine"}
  - {tag: "ubuntu-mate", desc: "MATE Ubuntu"}
  - {tag: "fedora-mate", desc: "MATE Fedora"}
  - {tag: "arch-mate", desc: "MATE Arch"}
  - {tag: "debian-mate", desc: "MATE Debian"}
  - {tag: "alpine-i3", desc: "i3 Alpine"}
  - {tag: "ubuntu-i3", desc: "i3 Ubuntu"}
  - {tag: "fedora-i3", desc: "i3 Fedora"}
  - {tag: "arch-i3", desc: "i3 Arch"}
  - {tag: "debian-i3", desc: "i3 Debian"}
# container parameters
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - {vol_path: "/config", vol_host_path: "/path/to/data", desc: "abc users home directory"}
param_usage_include_ports: true
param_ports:
  - {external_port: "3000", internal_port: "3000", port_desc: "Web Desktop GUI HTTP, must be proxied"}
  - {external_port: "3001", internal_port: "3001", port_desc: "Web Desktop GUI HTTPS"}
param_usage_include_env: true
param_env_vars:
  - {env_var: "TZ", env_value: "Europe/London", desc: "Specify a timezone to use EG Europe/London"}
# optional variables
opt_param_usage_include_env: true
opt_param_env_vars:
  - {env_var: "SUBFOLDER", env_value: "/", desc: "Specify a subfolder to use with reverse proxies, IE `/subfolder/`"}
  - {env_var: "TITLE", env_value: "Webtop", desc: "String which will be used as page/tab title in the web browser."}
opt_param_usage_include_vols: true
opt_param_volumes:
  - {vol_path: "/var/run/docker.sock", vol_host_path: "/var/run/docker.sock", desc: "Docker Socket on the system, if you want to use Docker in the container"}
opt_custom_params:
  - {name: "shm-size", name_compose: "shm_size", value: "1gb", desc: "We set this to 1 gig to prevent modern web browsers from crashing"}
opt_security_opt_param: true
opt_security_opt_param_vars:
  - {run_var: "seccomp=unconfined", compose_var: "seccomp:unconfined", desc: "For Docker Engine only, many modern gui apps need this to function on older hosts as syscalls are unknown to Docker."}
# application setup block
app_setup_block_enabled: true
app_setup_block: |
  The Webtop can be accessed at:

  * https://yourhost:3001/

  **Modern GUI desktop apps have issues with the latest Docker and syscall compatibility, you can use Docker with the `--security-opt seccomp=unconfined` setting to allow these syscalls on hosts with older Kernels or libseccomp**

  ### Security

  >[!WARNING]
  >Do not put this on the Internet if you do not know what you are doing.

  By default this container has no authentication and the optional environment variables `CUSTOM_USER` and `PASSWORD` to enable basic http auth via the embedded NGINX server should only be used to locally secure the container from unwanted access on a local network. If exposing this to the Internet we recommend putting it behind a reverse proxy, such as [SWAG](https://github.com/linuxserver/docker-swag), and ensuring a secure authentication solution is in place. From the web interface a terminal can be launched and it is configured for passwordless sudo, so anyone with access to it can install and run whatever they want along with probing your local network.

  ### Options in all Selkies based GUI containers

  This container is based on [Docker Baseimage Selkies](https://github.com/linuxserver/docker-baseimage-selkies) which means there are additional environment variables and run configurations to enable or disable specific functionality.

  #### Optional environment variables

  | Variable | Description |
  | :----: | --- |
  | CUSTOM_PORT | Internal port the container listens on for http if it needs to be swapped from the default 3000. |
  | CUSTOM_HTTPS_PORT | Internal port the container listens on for https if it needs to be swapped from the default 3001. |
  | CUSTOM_USER | HTTP Basic auth username, abc is default. |
  | PASSWORD | HTTP Basic auth password, abc is default. If unset there will be no auth |
  | SUBFOLDER | Subfolder for the application if running a subfolder reverse proxy, need both slashes IE `/subfolder/` |
  | TITLE | The page title displayed on the web browser, default "Selkies". |
  | START_DOCKER | If set to false a container with privilege will not automatically start the DinD Docker setup. |
  | DISABLE_IPV6 | If set to true or any value this will disable IPv6 | 
  | LC_ALL | Set the Language for the container to run as IE `fr_FR.UTF-8` `ar_AE.UTF-8` |
  | NO_DECOR | If set the application will run without window borders in openbox for use as a PWA. |
  | NO_FULL | Do not automatically fullscreen applications when using openbox. |

  #### Optional run configurations

  | Variable | Description |
  | :----: | --- |
  | `--privileged` | Will start a Docker in Docker (DinD) setup inside the container to use docker in an isolated environment. For increased performance mount the Docker directory inside the container to the host IE `-v /home/user/docker-data:/var/lib/docker`. |
  | `-v /var/run/docker.sock:/var/run/docker.sock` | Mount in the host level Docker socket to either interact with it via CLI or use Docker enabled applications. |

  ### Language Support - Internationalization

  The environment variable `LC_ALL` can be used to start this container in a different language than English simply pass for example to launch the Desktop session in French `LC_ALL=fr_FR.UTF-8`. Some supported languages: 

  * `-e LC_ALL=zh_CN.UTF-8` - Chinese
  * `-e LC_ALL=ja_JP.UTF-8` - Japanese
  * `-e LC_ALL=ko_KR.UTF-8` - Korean
  * `-e LC_ALL=ar_AE.UTF-8` - Arabic
  * `-e LC_ALL=ru_RU.UTF-8` - Russian
  * `-e LC_ALL=es_MX.UTF-8` - Spanish (Latin America)
  * `-e LC_ALL=de_DE.UTF-8` - German
  * `-e LC_ALL=fr_FR.UTF-8` - French
  * `-e LC_ALL=nl_NL.UTF-8` - Netherlands
  * `-e LC_ALL=it_IT.UTF-8` - Italian

  ### Nvidia GPU Support

  **Nvidia support is not compatible with Alpine based images as Alpine lacks Nvidia drivers**

  Nvidia support is available by leveraging Zink for OpenGL support. This can be enabled with the following run flags:

  | Variable | Description |
  | :----: | --- |
  | --gpus all | This can be filtered down but for most setups this will pass the one Nvidia GPU on the system |
  | --runtime nvidia | Specify the Nvidia runtime which mounts drivers and tools in from the host |

  The compose syntax is slightly different for this as you will need to set nvidia as the default runtime:

  ```
  sudo nvidia-ctk runtime configure --runtime=docker --set-as-default
  sudo service docker restart
  ```

  And to assign the GPU in compose:

  ```
  services:
    webtop:
      image: lscr.io/linuxserver/webtop:ubuntu-xfce
      deploy:
        resources:
          reservations:
            devices:
              - driver: nvidia
                count: 1
                capabilities: [compute,video,graphics,utility]
  ```
  
  ### Application management

  #### PRoot Apps

  If you run system native installations of software IE `sudo apt-get install filezilla` and then upgrade or destroy/re-create the container that software will be removed and the container will be at a clean state. For some users that will be acceptable and they can update their system packages as well using system native commands like `apt-get upgrade`. If you want Docker to handle upgrading the container and retain your applications and settings we have created [proot-apps](https://github.com/linuxserver/proot-apps) which allow portable applications to be installed to persistent storage in the user's `$HOME` directory and they will work in a confined Docker environment out of the box. These applications and their settings will persist upgrades of the base container and can be mounted into different flavors ofSelkiess based containers on the fly. This can be achieved from the command line with:

  ```
  proot-apps install filezilla
  ```

  PRoot Apps is included in all Selkies based containers, a list of linuxserver.io supported applications is located [HERE](https://github.com/linuxserver/proot-apps?tab=readme-ov-file#supported-apps).

  #### Native Apps

  It is possible to install extra packages during container start using [universal-package-install](https://github.com/linuxserver/docker-mods/tree/universal-package-install). It might increase starting time significantly. PRoot is preferred.

  ```yaml
    environment:
      - DOCKER_MODS=linuxserver/mods:universal-package-install
      - INSTALL_PACKAGES=libfuse2|git|gdb
  ```
# changelog
changelogs:
  - {date: "17.06.25:", desc: "Rebase all images to Selkies, drop openbox and icewm, bump Alpine to 3.22, bump Fedora to 42."}
  - {date: "10.01.25:", desc: "Rebase Fedora to 41."}
  - {date: "06.12.24:", desc: "Rebase Alpine to 3.21."}
  - {date: "26.09.24:", desc: "Swap from firefox to chromium on Alpine images."}
  - {date: "23.05.24:", desc: "Rebase Alpine to 3.20, document Nvidia support."}
  - {date: "22.04.24:", desc: "Rebase Ubuntu to Noble."}
  - {date: "16.04.24:", desc: "Add docs on PRoot Apps."}
  - {date: "14.04.24:", desc: "Rebase Fedora to 40."}
  - {date: "11.02.24:", desc: "Add PWA icons and title variants properly."}
  - {date: "06.02.24:", desc: "Update Readme about native language support."}
  - {date: "29.12.23:", desc: "Rebase Alpine to 3.19 and swap back to Firefox."}
  - {date: "07.11.23:", desc: "Rebase Fedora to 39."}
  - {date: "14.06.23:", desc: "Rebase to Debian Bookworm."}
  - {date: "13.05.23:", desc: "Rebase to Alpine 3.18 and Fedora 38."}
  - {date: "23.03.23:", desc: "Rebase all Webtops to KasmVNC base image."}
  - {date: "21.10.22:", desc: "Rebase xfce to Alpine 3.16, migrate to s6v3."}
  - {date: "12.03.22:", desc: "Add documentation for mounting in a GPU."}
  - {date: "05.02.22:", desc: "Rebase KDE Ubuntu to Jammy, add new documentation for updated gclient, stop recommending priv mode."}
  - {date: "21.09.21:", desc: "Add Fedora and Arch images, show seccomp settings in readme."}
  - {date: "26.09.21:", desc: "Rebase to Alpine versions to 3.14."}
  - {date: "20.04.21:", desc: "Initial release."}
